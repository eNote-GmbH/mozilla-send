variables:
  APP: "user-files"
  DOCKER_IMAGE_URI: "enote/mozilla-send"
  DOCKER_CONTEXT_NAME: "enote-mozilla-send"

stages:
  - prepare
  - test
  - docker
  - deploy

cache:
  key: mozilla-send-npm
  policy: pull-push
  paths:
    - .npm/

.prepare-template:
  stage: prepare
  image: bitnami/git
  artifacts:
    reports:
      dotenv: docker-variables.env

prepare-branch:
  extends: .prepare-template
  script:
    - set -e
    - 'echo "CI triggered by: $CI_PIPELINE_SOURCE"'
    - echo "APP_VERSION_TAG=$(git describe --always --tag HEAD)" > docker-variables.env
  rules:
    - if: '$CI_COMMIT_REF_NAME != $CI_COMMIT_TAG'

prepare-tag:
  extends: .prepare-template
  script:
    - set -e
    - 'echo "CI triggered by: $CI_PIPELINE_SOURCE"'
    - git tag --delete "$CI_COMMIT_TAG"
    - echo "APP_VERSION_TAG=$(git describe --always --tag HEAD)" > docker-variables.env
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_COMMIT_TAG'

# Build Send, run npm tests
test:
  stage: test
  image: "node:16"
  before_script:
    # Install dependencies
    - apt-get update
    - apt-get install -y git python3 build-essential libxtst6

    # Prepare Chrome for puppeteer
    - apt-get install -y wget gnupg
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
    - apt-get update
    - apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 libx11-xcb1 --no-install-recommends
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run lint

.docker-template:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script: |
    mkdir -p /kaniko/.docker
    echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    if [ -n "$FROM_TAG" ]; then
      echo "Re-tagging Docker image from $FROM_TAG to $TAG"
      echo "FROM $CI_REGISTRY_IMAGE:$FROM_TAG" | /kaniko/executor --context $CI_PROJECT_DIR --dockerfile /dev/stdin --destination $CI_REGISTRY_IMAGE:$TAG $KANIKO_ARGS
    else
      echo "Building Docker image for tag $TAG"
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$TAG $KANIKO_ARGS
    fi

docker-retag:
  extends: .docker-template
  variables:
    TAG: $CI_COMMIT_TAG
    FROM_TAG: $APP_VERSION_TAG
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_REF_NAME == $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v[0-9]\.[0-9\.]+/'

docker-main:
  extends: .docker-template
  variables:
    TAG: $APP_VERSION_TAG
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_REF_NAME != $CI_COMMIT_TAG && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'

docker-no-push:
  extends: .docker-template
  variables:
    TAG: "${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"
    KANIKO_ARGS: "--no-push"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_REF_NAME != $CI_COMMIT_TAG && $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH'

.update-helm-charts-template:
  stage: deploy
  image:
    name: python:3-slim
    entrypoint: ["bash"]
  script: |
    set -e
    apt-get update
    apt-get -q -y install gettext-base git
    pip3 --disable-pip-version-check install semver

    # setup git
    git clone --single-branch --branch master --depth 10 https://$GITHUB_PERSONAL_TOKEN@github.com/eNote-GmbH/helm-charts.git /tmp/helm-charts
    cd /tmp/helm-charts
    git config credential.helper 'cache --timeout=120'
    git config user.email "ci-cd@enote.com"
    git config user.name "enotecicd"

    # update Docker image to use...
    envsubst '${TAG}' < "$ENV/$APP/values-template.yaml" > "$ENV/$APP/values.yaml"
    git add "$ENV/$APP/values.yaml"

    # ensure that we have some change, if not - error out...
    git commit --dry-run

    # update the Helm Chart metadata
    chart_version="$(sed -n -E 's/^version.\s+//p' "$ENV/$APP/Chart.yaml")"
    chart_version="$(python3 -c 'import semver; ver = semver.VersionInfo.parse("'"${chart_version}"'"); print(ver.bump_patch())')"
    sed -i -E 's/^(version.\s+).*/\1'"${chart_version}"'/; s/^(appVersion.\s*).*/\1'"${TAG}"'/' "$ENV/$APP/Chart.yaml"
    git add "$ENV/$APP/Chart.yaml"

    # finally update the repo
    git commit -m "chore(gitlab-ci): update image tag to $TAG for $ENV/$APP"
    git pull --rebase=true origin master
    git push -q https://$GITHUB_PERSONAL_TOKEN@github.com/eNote-GmbH/helm-charts.git master

deploy-dev:
  extends: .update-helm-charts-template
  variables:
    ENV: dev
    TAG: $APP_VERSION_TAG
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_NAME != $CI_COMMIT_TAG'

deploy-stage:
  extends: .update-helm-charts-template
  variables:
    ENV: staging
    TAG: $CI_COMMIT_TAG
  rules:
    - if: '$CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_REF_NAME == $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v[0-9]\.[0-9\.]+/'
